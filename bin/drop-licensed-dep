#!/bin/sh
# shellcheck disable=SC2006,SC2021
set -e

usage="${0##*/} [-q|--quiet] submodule"

# Print non-essential feedback
log()([ "$quiet" ] || printf '%s\n' "$@")

# Print an error message
warn()(printf '%s: %s\n' "${0##*/}" "$@")

# Display a shortened help summary and bail with an error code
bad_invocation(){
	printf '%s\n' "$usage" >&2
	exit 2
}


# Parse options
while [ -n "$1" ]; do case $1 in

	# Print an unabridged usage summary, then exit
	-h|--help|-\?)
		cat <<-HELP
		Usage:
		    $usage

		Options:
		    -q, --quiet               Do not print output unless there's a failure.

		Examples:
		    $0 https://github.com/Alhadis/language-roff
		    $0 sublime-apl
		HELP
		exit ;;

	# Hide non-essential feedback
	-q | --quiet)
		quiet=1
		break ;;

	# Double-dash: Terminate option parsing
	--)
		shift
		break ;;

	# Invalid option: abort
	--* | -?*)
		warn 'invalid option: "%s"' "${0##*/}" "$1" >&2
		bad_invocation ;;

	# Argument not prefixed with a dash
	*) break ;;

esac; shift
done


# Don't proceed any further if we don't have a URL
[ "$1" ] || bad_invocation


# Check upfront that executables we depend on are available
for cmd in git; do
	command -v "$cmd" >/dev/null 2>&1 || {
		warn "Required command '$cmd' not found"
		exit 1
	}
done

# Make sure we're running from checkout directory
root=`git rev-parse --git-dir`
root="${root%/.git}"
# shellcheck disable=SC3013
if [ ! "$root" = .git ] && [ -d "$root" ] && ! [ . -ef "$root" ] >/dev/null 2>&1; then
	log "Switching directory to $root"
	cd "$root"
fi


# Remove submodule/dep
# Normalise submodule reference
replace=`printf %s "$1" \
  | tr '[A-Z]' '[a-z]' \
  | sed 's/^\(.*\/\)\{0,1\}vendor\///; s/^licensed-dependencies\///'`
replace=`git config --list \
  | grep -Fi -m1 "submodule.vendor/licensed-dependencies/$replace.url=" \
  | sed 's/\.url=.*//; s/^submodule\.//' || :`
[ "$replace" ] || {
  warn "Submodule '$replace' does not exist. Aborting."
  exit 1
}

log "Deregistering submodule: $replace"
git submodule deinit "$replace"
git rm -rf "$replace"

log 'Caching grammar license'
bundle exec licensed cache -c vendor/licenses/config.yml

log 'Updating grammar documentation in vendor/README.md'
bin/sort-submodules
bin/list-licensed-deps
